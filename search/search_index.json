{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introdu\u00e7\u00e3o ao Terraform","text":""},{"location":"#o-que-e-terraform","title":"O que \u00e9 Terraform?","text":"<p>Terraform \u00e9 uma ferramenta de c\u00f3digo aberto desenvolvida pela HashiCorp, que permite a cria\u00e7\u00e3o, atualiza\u00e7\u00e3o e gerenciamento de infraestrutura de forma segura e eficiente. Usando uma linguagem de configura\u00e7\u00e3o declarativa, conhecida como HashiCorp Configuration Language (HCL), voc\u00ea pode definir e provisionar datacenters completos atrav\u00e9s de c\u00f3digo.</p>"},{"location":"#conceitos-aprendidos","title":"Conceitos Aprendidos","text":"<p>Neste tutorial, voc\u00ea aprender\u00e1:</p> <ol> <li>Instala\u00e7\u00e3o do Terraform CLI: Como instalar a ferramenta Terraform no sistema.</li> <li>Instala\u00e7\u00e3o do AWS CLI: Como configurar o AWS Command Line Interface para interagir com os servi\u00e7os da AWS.</li> <li>Configura\u00e7\u00e3o de Credenciais da AWS: Como configurar as credenciais de acesso para permitir que o Terraform interaja com a AWS.</li> <li>Cria\u00e7\u00e3o de uma Inst\u00e2ncia EC2: Como usar o Terraform para definir e provisionar uma inst\u00e2ncia EC2 na AWS.</li> <li>Inicializa\u00e7\u00e3o, Planejamento e Aplica\u00e7\u00e3o: Como inicializar um diret\u00f3rio de trabalho Terraform, planejar a infraestrutura e aplicar a configura\u00e7\u00e3o.</li> <li>Resolu\u00e7\u00e3o de Erros Comuns: Como solucionar problemas comuns, como a sele\u00e7\u00e3o de uma AMI v\u00e1lida.</li> <li>Limpeza de Infraestrutura: Como destruir a infraestrutura criada para evitar custos desnecess\u00e1rios.</li> </ol>"},{"location":"#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":"<ul> <li>Terraform: Para defini\u00e7\u00e3o e provisionamento de infraestrutura como c\u00f3digo.</li> <li>AWS CLI: Para intera\u00e7\u00e3o com os servi\u00e7os da AWS via linha de comando.</li> <li>Terminal: Para execu\u00e7\u00e3o de comandos.</li> </ul>"},{"location":"#importancia-do-terraform","title":"Import\u00e2ncia do Terraform","text":"<p>A infraestrutura como c\u00f3digo (IaC) \u00e9 um componente essencial da automa\u00e7\u00e3o de TI, permitindo que voc\u00ea trate sua infraestrutura da mesma forma que trata seu c\u00f3digo de software. Isso traz diversos benef\u00edcios, como:</p> <ul> <li>Reprodutibilidade: A capacidade de recriar ambientes de maneira consistente.</li> <li>Controle de Vers\u00e3o: Hist\u00f3rico de mudan\u00e7as na infraestrutura.</li> <li>Automa\u00e7\u00e3o: Redu\u00e7\u00e3o de tarefas manuais, minimizando erros humanos.</li> <li>Escalabilidade: Facilita a gest\u00e3o de grandes volumes de recursos de maneira eficiente.</li> </ul>"},{"location":"#desvantagens-do-terraform-e-iac","title":"Desvantagens do Terraform e IaC","text":"<p>Embora a infraestrutura como c\u00f3digo traga muitos benef\u00edcios, tamb\u00e9m existem algumas desvantagens a considerar:</p> <ul> <li>Complexidade: Com infraestrutura como c\u00f3digo, voc\u00ea acaba com uma grande base de c\u00f3digo que pode ser dif\u00edcil de gerenciar.</li> <li>Tempo: Escrever infraestrutura como c\u00f3digo leva muito tempo inicialmente, ent\u00e3o para projetos pequenos pode ser mais eficiente n\u00e3o utiliz\u00e1-lo!</li> <li>Bloqueio: A maioria da infraestrutura como c\u00f3digo \u00e9 espec\u00edfica para o provedor de nuvem. Se voc\u00ea quiser mudar de provedor, tamb\u00e9m precisar\u00e1 migrar todo o seu IaC!</li> </ul>"},{"location":"outputs/","title":"Outputs","text":""},{"location":"outputs/#evidencias-do-passo-a-passo","title":"Evid\u00eancias do Passo a Passo","text":""},{"location":"outputs/#1-verificando-a-instalacao-do-terraform","title":"1. Verificando a Instala\u00e7\u00e3o do Terraform","text":"<p>Ap\u00f3s instalar o Terraform, voc\u00ea pode verificar a instala\u00e7\u00e3o executando o comando <code>terraform -v</code>. </p> <p>Comando:</p> <pre><code>terraform -v\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra a vers\u00e3o do Terraform instalada no seu sistema, confirmando que a instala\u00e7\u00e3o foi bem-sucedida.</p> <p></p>"},{"location":"outputs/#2-verificando-a-instalacao-do-aws-cli","title":"2. Verificando a Instala\u00e7\u00e3o do AWS CLI","text":"<p>Depois de instalar o AWS CLI, voc\u00ea pode verificar a instala\u00e7\u00e3o executando o comando <code>aws --version</code>.</p> <p>Comando:</p> <pre><code>aws --version\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra a vers\u00e3o do AWS CLI instalada, garantindo que a instala\u00e7\u00e3o foi conclu\u00edda corretamente.</p> <p></p>"},{"location":"outputs/#3-criando-o-arquivo-maintf","title":"3. Criando o Arquivo main.tf","text":"<p>Crie um arquivo de configura\u00e7\u00e3o Terraform chamado <code>main.tf</code> com o seguinte conte\u00fado:</p> <pre><code>provider \"aws\" {\n  region = \"us-east-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0c02fb55956c7d316\"  # Amazon Linux 2 AMI (HVM), SSD Volume Type\n  instance_type = \"t2.micro\"\n\n  tags = {\n    Name = \"TerraformExample\"\n  }\n}\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra o conte\u00fado do arquivo <code>main.tf</code> criado no seu editor de texto.</p> <p></p>"},{"location":"outputs/#4-inicializando-o-terraform","title":"4. Inicializando o Terraform","text":"<p>Inicialize o Terraform executando o comando <code>terraform init</code> no diret\u00f3rio onde est\u00e1 o arquivo <code>main.tf</code>.</p> <p>Comando:</p> <pre><code>terraform init\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra a sa\u00edda do comando <code>terraform init</code>, indicando que o Terraform foi inicializado com sucesso.</p> <p></p>"},{"location":"outputs/#5-planejando-a-infraestrutura","title":"5. Planejando a Infraestrutura","text":"<p>Execute o comando <code>terraform plan</code> para ver o que ser\u00e1 criado.</p> <p>Comando:</p> <pre><code>terraform plan\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra a sa\u00edda do comando <code>terraform plan</code>, detalhando os recursos que ser\u00e3o criados.</p> <p></p>"},{"location":"outputs/#6-aplicando-a-configuracao","title":"6. Aplicando a Configura\u00e7\u00e3o","text":"<p>Para criar a inst\u00e2ncia EC2, execute o comando <code>terraform apply</code> e digite <code>yes</code> quando solicitado.</p> <p>Comando:</p> <pre><code>terraform apply\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra a sa\u00edda do comando <code>terraform apply</code>, indicando a cria\u00e7\u00e3o bem-sucedida da inst\u00e2ncia EC2.</p> <p></p>"},{"location":"outputs/#7-verificando-a-instancia-na-aws","title":"7. Verificando a Inst\u00e2ncia na AWS","text":"<p>Para verificar se a inst\u00e2ncia foi criada, acesse o AWS Management Console, navegue at\u00e9 o servi\u00e7o EC2 e confira a lista de inst\u00e2ncias.</p> <p>Descri\u00e7\u00e3o do Print: Este print mostra a inst\u00e2ncia EC2 criada na AWS. Ele inclui detalhes como o ID da inst\u00e2ncia, tipo de inst\u00e2ncia, estado e nome (\"TerraformExample\").</p> <p></p>"},{"location":"outputs/#8-limpando-a-infraestrutura","title":"8. Limpando a Infraestrutura","text":"<p>Para destruir a inst\u00e2ncia criada, execute o comando <code>terraform destroy</code> e digite <code>yes</code> quando solicitado.</p> <p>Comando:</p> <pre><code>terraform destroy\n</code></pre> <p>Descri\u00e7\u00e3o do Print: Este print mostra a sa\u00edda do comando <code>terraform destroy</code>, indicando a destrui\u00e7\u00e3o bem-sucedida da inst\u00e2ncia EC2.</p> <p></p>"},{"location":"setup/","title":"Setup e Passo a Passo para Criar uma Inst\u00e2ncia EC2 com Terraform","text":""},{"location":"setup/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, certifique-se de que voc\u00ea tem uma conta na AWS Academy.</p>"},{"location":"setup/#setup-linux","title":"Setup Linux","text":""},{"location":"setup/#instalando-o-terraform-cli","title":"Instalando o Terraform CLI","text":"<ol> <li>Abra o terminal.</li> <li>Adicionar a chave GPG do reposit\u00f3rio do HashiCorp:</li> </ol> <pre><code>wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg\n</code></pre> <ol> <li>Adicionar o reposit\u00f3rio do HashiCorp \u00e0 lista de fontes APT:</li> </ol> <pre><code>echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list\n</code></pre> <ol> <li>Atualizar a lista de pacotes e instalar o Terraform:</li> </ol> <pre><code>sudo apt update &amp;&amp; sudo apt install terraform\n</code></pre>"},{"location":"setup/#instalando-o-aws-cli","title":"Instalando o AWS CLI","text":"<ol> <li>Abra o terminal.</li> <li>Baixe o instalador do AWS CLI:</li> </ol> <pre><code>curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\n</code></pre> <ol> <li>Extraia o arquivo ZIP:</li> </ol> <pre><code>unzip awscliv2.zip\n</code></pre> <ol> <li>Instale o AWS CLI:</li> </ol> <pre><code>sudo ./aws/install\n</code></pre> <ol> <li>Verifique a instala\u00e7\u00e3o executando:</li> </ol> <pre><code>aws --version\n</code></pre>"},{"location":"setup/#configurando-as-credenciais-da-aws","title":"Configurando as Credenciais da AWS","text":"<ol> <li>Configure suas credenciais da AWS executando o comando:    <code>bash    aws configure</code></li> <li>Forne\u00e7a suas credenciais de acesso (AWS Access Key ID, AWS Secret Access Key, regi\u00e3o padr\u00e3o e formato de sa\u00edda).</li> <li>Abra o terminal e navegue at\u00e9 o diret\u00f3rio de configura\u00e7\u00e3o da AWS para configurar o AWS Access Token diretamente no arquivo de credenciais:</li> </ol> <pre><code>    cd ~/.aws/\n</code></pre> <p>a) Abra o arquivo <code>credentials</code> em um editor de texto:</p> <pre><code>nano credentials\n</code></pre> <p>b) Adicione ou edite a se\u00e7\u00e3o com o seguinte conte\u00fado:</p> <pre><code>[default]\naws_access_key_id = YOUR_ACCESS_KEY_ID\naws_secret_access_key = YOUR_SECRET_ACCESS_KEY\naws_session_token = YOUR_SESSION_TOKEN\n</code></pre>"},{"location":"setup/#setup-windows","title":"Setup Windows","text":""},{"location":"setup/#instalando-o-terraform-cli_1","title":"Instalando o Terraform CLI","text":"<ol> <li>Abra o PowerShell como Administrador.</li> <li>Baixe o Terraform executando o comando:</li> </ol> <pre><code>Invoke-WebRequest -Uri https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_windows_amd64.zip -OutFile terraform.zip\n</code></pre> <ol> <li>Extraia o arquivo ZIP:</li> </ol> <pre><code>Expand-Archive -Path terraform.zip -DestinationPath C:\\terraform\n</code></pre> <ol> <li>Adicione o Terraform ao PATH do sistema:</li> </ol> <pre><code>[System.Environment]::SetEnvironmentVariable('PATH', $env:PATH + ';C:\\terraform', [System.EnvironmentVariableTarget]::Machine)\n</code></pre> <ol> <li>Verifique a instala\u00e7\u00e3o executando:</li> </ol> <pre><code>terraform -v\n</code></pre>"},{"location":"setup/#instalando-o-aws-cli_1","title":"Instalando o AWS CLI","text":"<ol> <li>Abra o PowerShell como Administrador.</li> <li>Baixe o instalador do AWS CLI executando:</li> </ol> <pre><code>Invoke-WebRequest -Uri https://awscli.amazonaws.com/AWSCLIV2.msi -OutFile AWSCLIV2.msi\n</code></pre> <ol> <li>Instale o AWS CLI executando:</li> </ol> <pre><code>Start-Process msiexec.exe -Wait -ArgumentList '/I AWSCLIV2.msi /quiet'\n</code></pre> <ol> <li>Verifique a instala\u00e7\u00e3o executando:</li> </ol> <pre><code>aws --version\n</code></pre>"},{"location":"setup/#configurando-as-credenciais-da-aws_1","title":"Configurando as Credenciais da AWS","text":"<ol> <li>Configure suas credenciais da AWS executando o comando:</li> </ol> <pre><code>aws configure\n</code></pre> <ol> <li>Forne\u00e7a suas credenciais de acesso (AWS Access Key ID, AWS Secret Access Key, regi\u00e3o padr\u00e3o e formato de sa\u00edda). </li> <li>Abra o PowerShell e navegue at\u00e9 o diret\u00f3rio de configura\u00e7\u00e3o da AWS para configurar o AWS Access Token diretamente no arquivo de credenciais:</li> </ol> <pre><code>cd ~\\.aws\\\n</code></pre> <p>a) Abra o arquivo <code>credentials</code> em um editor de texto:</p> <pre><code>notepad credentials\n</code></pre> <p>b) Adicione ou edite a se\u00e7\u00e3o com o seguinte conte\u00fado:</p> <pre><code>[default]\naws_access_key_id = YOUR_ACCESS_KEY_ID\naws_secret_access_key = YOUR_SECRET_ACCESS_KEY\naws_session_token = YOUR_SESSION_TOKEN\n</code></pre>"},{"location":"steps/","title":"Passo a Passo","text":"<p>Este tutorial oferece uma introdu\u00e7\u00e3o detalhada ao uso do Terraform para provisionar infraestrutura na AWS. Ao seguir esses passos, voc\u00ea poder\u00e1 criar e gerenciar uma inst\u00e2ncia EC2 na AWS.</p>"},{"location":"steps/#criando-uma-instancia-ec2-com-terraform","title":"Criando uma Inst\u00e2ncia EC2 com Terraform","text":"<ol> <li>Crie um arquivo de configura\u00e7\u00e3o Terraform chamado <code>main.tf</code> com o seguinte conte\u00fado:</li> </ol> <pre><code>    provider \"aws\" {\n        region = \"us-east-1\"\n    }\n\n    resource \"aws_instance\" \"example\" {\n        ami           = \"ami-0c02fb55956c7d316\"  # Amazon Linux 2 AMI (HVM), SSD Volume Type\n        instance_type = \"t2.micro\"\n\n    tags = {\n        Name = \"TerraformExample\"\n    }\n    }\n</code></pre>"},{"location":"steps/#inicializando-o-terraform","title":"Inicializando o Terraform","text":"<ol> <li>Abra o terminal no diret\u00f3rio onde est\u00e1 o arquivo <code>main.tf</code> e execute:</li> </ol> <pre><code>terraform init\n</code></pre>"},{"location":"steps/#planejando-a-infraestrutura","title":"Planejando a Infraestrutura","text":"<ol> <li>Para ver o que ser\u00e1 criado, execute:</li> </ol> <pre><code>terraform plan\n</code></pre>"},{"location":"steps/#aplicando-a-configuracao","title":"Aplicando a Configura\u00e7\u00e3o","text":"<ol> <li>Para criar a inst\u00e2ncia EC2, execute:</li> </ol> <pre><code>terraform apply\n</code></pre> <ol> <li>Digite <code>yes</code> quando solicitado para confirmar a aplica\u00e7\u00e3o da configura\u00e7\u00e3o.</li> </ol>"},{"location":"steps/#resolvendo-erros-de-ami","title":"Resolvendo Erros de AMI","text":"<ol> <li>Se voc\u00ea encontrar o erro <code>InvalidAMIID.NotFound</code>, significa que o ID da AMI n\u00e3o \u00e9 v\u00e1lido para a regi\u00e3o especificada. Para encontrar uma AMI v\u00e1lida, voc\u00ea pode usar o comando AWS CLI:</li> </ol> <pre><code>aws ec2 describe-images --owners amazon --filters \"Name=name,Values=amzn2-ami-hvm-2.0.????????-x86_64-gp2\"\n</code></pre> <ol> <li>Isso retornar\u00e1 uma lista de AMIs v\u00e1lidas que voc\u00ea pode usar. Substitua o ID da AMI em seu arquivo <code>main.tf</code> por uma das AMIs listadas.</li> </ol>"},{"location":"steps/#limpando-a-infraestrutura","title":"Limpando a Infraestrutura","text":"<ol> <li>Para destruir a inst\u00e2ncia criada, execute:</li> </ol> <pre><code>terraform destroy\n</code></pre> <ol> <li>Digite <code>yes</code> quando solicitado para confirmar a destrui\u00e7\u00e3o da infraestrutura.</li> </ol>"},{"location":"structure/","title":"Estrutura do Projeto com Terraform","text":""},{"location":"structure/#diretorios-e-arquivos","title":"Diret\u00f3rios e Arquivos","text":"<p>Para organizar seu projeto Terraform, voc\u00ea precisar\u00e1 de alguns diret\u00f3rios e arquivos b\u00e1sicos. Aqui est\u00e1 uma estrutura sugerida:</p> <pre><code>/meu-projeto-terraform\n    \u251c\u2500\u2500 main.tf\n    \u251c\u2500\u2500 variables.tf\n    \u251c\u2500\u2500 outputs.tf\n    \u2514\u2500\u2500 .terraform/\n</code></pre>"},{"location":"structure/#descricao-dos-arquivos","title":"Descri\u00e7\u00e3o dos Arquivos","text":"<ul> <li>main.tf: Este \u00e9 o arquivo principal onde voc\u00ea define os recursos da infraestrutura. Neste tutorial, ele conter\u00e1 a defini\u00e7\u00e3o da inst\u00e2ncia EC2.</li> <li>variables.tf (opcional): Defina vari\u00e1veis para parametrizar sua configura\u00e7\u00e3o. Isso ajuda a tornar seu c\u00f3digo mais modular e reutiliz\u00e1vel.</li> <li>outputs.tf (opcional): Defina sa\u00eddas para obter informa\u00e7\u00f5es sobre os recursos provisionados, como o endere\u00e7o IP da inst\u00e2ncia EC2.</li> <li>.terraform/: Diret\u00f3rio criado automaticamente pelo Terraform para armazenar arquivos de estado e cache.</li> </ul>"},{"location":"structure/#conteudo-do-arquivo-maintf","title":"Conte\u00fado do Arquivo main.tf","text":"<pre><code>provider \"aws\" {\n  region = \"us-east-1\"\n}\n\nresource \"aws_instance\" \"example\" {\n  ami           = \"ami-0c02fb55956c7d316\"  # Amazon Linux 2 AMI (HVM), SSD Volume Type\n  instance_type = \"t2.micro\"\n\n  tags = {\n    Name = \"TerraformExample\"\n  }\n}\n</code></pre> <p>Neste arquivo, voc\u00ea especifica o provedor AWS e define um recurso de inst\u00e2ncia EC2 com a imagem AMI e o tipo de inst\u00e2ncia.</p>"},{"location":"structure/#conteudo-do-arquivo-variablestf-opcional","title":"Conte\u00fado do Arquivo variables.tf (Opcional)","text":"<pre><code>variable \"region\" {\n  description = \"The AWS region to deploy the instance.\"\n  default     = \"us-east-1\"\n}\n</code></pre> <p>Este arquivo define uma vari\u00e1vel para a regi\u00e3o AWS, permitindo que voc\u00ea altere a regi\u00e3o sem modificar diretamente o arquivo main.tf.</p>"},{"location":"structure/#conteudo-do-arquivo-outputstf-opcional","title":"Conte\u00fado do Arquivo outputs.tf (Opcional)","text":"<pre><code>output \"instance_id\" {\n  description = \"The ID of the EC2 instance.\"\n  value       = aws_instance.example.id\n}\n\noutput \"instance_public_ip\" {\n  description = \"The public IP address of the EC2 instance.\"\n  value       = aws_instance.example.public_ip\n}\n</code></pre> <p>Este arquivo define sa\u00eddas para o ID e o endere\u00e7o IP p\u00fablico da inst\u00e2ncia EC2, facilitando a obten\u00e7\u00e3o dessas informa\u00e7\u00f5es ap\u00f3s a cria\u00e7\u00e3o da inst\u00e2ncia.</p>"}]}